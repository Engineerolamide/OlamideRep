{
	"name": "dataflow_scd2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_blobcsvfile",
						"type": "DatasetReference"
					},
					"name": "sourceblob"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlsource1scd",
						"type": "DatasetReference"
					},
					"name": "sourceSQLDB"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlsource1scd",
						"type": "DatasetReference"
					},
					"name": "sinkSQLDB"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable9",
						"type": "DatasetReference"
					},
					"name": "sinkSQLDBFinal",
					"description": "adding sqldb for final destination"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumnIsCurrent"
				},
				{
					"name": "selectFROMsourcesqldb"
				},
				{
					"name": "lookupToCompare"
				},
				{
					"name": "FilterColumns",
					"description": "Filter_remove_unmatched_columns"
				},
				{
					"name": "selectDBColumn"
				},
				{
					"name": "derivedColumnIsCurrent2"
				},
				{
					"name": "AlterRow",
					"description": "to update if there is any changes in matching rows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          StudId as integer,",
				"          StuName as string,",
				"          Location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceblob",
				"source(output(",
				"          SurKey as integer,",
				"          StudId as integer,",
				"          StuName as string,",
				"          Location as string,",
				"          IsCurrent as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceSQLDB",
				"sourceblob derive(IsCurrent = 1) ~> DerivedColumnIsCurrent",
				"sourceSQLDB select(mapColumn(",
				"          DB_SurKey = SurKey,",
				"          {DB_ StudId} = StudId,",
				"          DB_StuName = StuName,",
				"          DB_Location = Location,",
				"          DB_IsCurrent = IsCurrent",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFROMsourcesqldb",
				"sourceblob, selectFROMsourcesqldb lookup(StudId == {DB_ StudId},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupToCompare",
				"lookupToCompare filter(!isNull({DB_ StudId})) ~> FilterColumns",
				"FilterColumns select(mapColumn(",
				"          DB_SurKey,",
				"          {DB_ StudId},",
				"          DB_StuName,",
				"          DB_Location,",
				"          DB_IsCurrent",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectDBColumn",
				"selectDBColumn derive(DB_IsCurrent = 0) ~> derivedColumnIsCurrent2",
				"derivedColumnIsCurrent2 alterRow(updateIf(1==1)) ~> AlterRow",
				"DerivedColumnIsCurrent sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SurKey as integer,",
				"          StudId as integer,",
				"          StuName as string,",
				"          Location as string,",
				"          IsCurrent as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          StudId,",
				"          StuName,",
				"          Location,",
				"          IsCurrent",
				"     )) ~> sinkSQLDB",
				"AlterRow sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SurKey as integer,",
				"          StudId as integer,",
				"          StuName as string,",
				"          Location as string,",
				"          IsCurrent as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['SurKey'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SurKey = DB_SurKey,",
				"          StudId = {DB_ StudId},",
				"          StuName = DB_StuName,",
				"          Location = DB_Location,",
				"          IsCurrent = DB_IsCurrent",
				"     )) ~> sinkSQLDBFinal"
			]
		}
	}
}