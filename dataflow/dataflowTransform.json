{
	"name": "dataflowTransform",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquetdessert",
						"type": "DatasetReference"
					},
					"name": "SourceDessert4All"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dessert4allparquetsilver",
						"type": "DatasetReference"
					},
					"name": "SinkSilverDessert4All"
				}
			],
			"transformations": [
				{
					"name": "derivedColumnDessert4All"
				},
				{
					"name": "surrogateKeyDessert4All"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesMonth as string,",
				"          Retailer as string,",
				"          Product as string,",
				"          SalesValueUSD as float,",
				"          UnitsSold as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     partitionBy('hash', 1)) ~> SourceDessert4All",
				"SourceDessert4All derive(Revenue = SalesValueUSD*UnitsSold,",
				"     partitionBy('hash', 1)) ~> derivedColumnDessert4All",
				"derivedColumnDessert4All keyGenerate(output(CustomerID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKeyDessert4All",
				"surrogateKeyDessert4All sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkSilverDessert4All"
			]
		}
	}
}